{"version":3,"sources":["../src/event_listener.ts","../src/dispatcher.ts","../src/action_descriptor.ts","../src/action.ts","../src/binding.ts","../src/element_observer.ts","../src/attribute_observer.ts","../src/string_map_observer.ts","../src/set_operations.ts","../src/multimap.ts","../src/indexed_multimap.ts","../src/index.ts","../src/token_list_observer.ts","../src/value_list_observer.ts","../src/binding_observer.ts","../src/value_observer.ts","../src/context.ts","../src/inheritable_statics.ts","../src/blessing.ts","../src/definition.ts","../src/module.ts","../src/class_map.ts","../src/string_helpers.ts","../src/data_map.ts","../src/guide.ts","../src/selectors.ts","../src/target_set.ts","../src/scope.ts","../src/scope_observer.ts","../src/router.ts","../src/schema.ts","../src/application.ts","../src/class_properties.ts","../src/target_properties.ts","../src/value_properties.ts","../src/controller.ts","node_modules/stimulus/index.js","controllers/hello_controller.js","index.js","../../../../Users/jan/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["console","log","Controller","application","Application","start","register","HelloController","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"frontend.e31bb0bc.js","sourceRoot":"..","sourcesContent":["import { Binding } from \"./binding\"\n\nexport class EventListener implements EventListenerObject {\n  readonly eventTarget: EventTarget\n  readonly eventName: string\n  readonly eventOptions: AddEventListenerOptions\n  private unorderedBindings: Set<Binding>\n\n  constructor(eventTarget: EventTarget, eventName: string, eventOptions: AddEventListenerOptions) {\n    this.eventTarget = eventTarget\n    this.eventName = eventName\n    this.eventOptions = eventOptions\n    this.unorderedBindings = new Set()\n  }\n\n  connect() {\n    this.eventTarget.addEventListener(this.eventName, this, this.eventOptions)\n  }\n\n  disconnect() {\n    this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions)\n  }\n\n  // Binding observer delegate\n\n  /** @hidden */\n  bindingConnected(binding: Binding) {\n    this.unorderedBindings.add(binding)\n  }\n\n  /** @hidden */\n  bindingDisconnected(binding: Binding) {\n    this.unorderedBindings.delete(binding)\n  }\n\n  handleEvent(event: Event) {\n    const extendedEvent = extendEvent(event)\n    for (const binding of this.bindings) {\n      if (extendedEvent.immediatePropagationStopped) {\n        break\n      } else {\n        binding.handleEvent(extendedEvent)\n      }\n    }\n  }\n\n  get bindings(): Binding[] {\n    return Array.from(this.unorderedBindings).sort((left, right) => {\n      const leftIndex = left.index, rightIndex = right.index\n      return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0\n    })\n  }\n\n}\n\nfunction extendEvent(event: Event) {\n  if (\"immediatePropagationStopped\" in event) {\n    return event\n  } else {\n    const { stopImmediatePropagation } = event\n    return Object.assign(event, {\n      immediatePropagationStopped: false,\n      stopImmediatePropagation() {\n        this.immediatePropagationStopped = true\n        stopImmediatePropagation.call(this)\n      }\n    })\n  }\n}\n","import { Application } from \"./application\"\nimport { Binding } from \"./binding\"\nimport { BindingObserverDelegate } from \"./binding_observer\"\nimport { EventListener } from \"./event_listener\"\n\nexport class Dispatcher implements BindingObserverDelegate {\n  readonly application: Application\n  private eventListenerMaps: Map<EventTarget, Map<string, EventListener>>\n  private started: boolean\n\n  constructor(application: Application) {\n    this.application = application\n    this.eventListenerMaps = new Map\n    this.started = false\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      this.eventListeners.forEach(eventListener => eventListener.connect())\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      this.eventListeners.forEach(eventListener => eventListener.disconnect())\n    }\n  }\n\n  get eventListeners(): EventListener[] {\n    return Array.from(this.eventListenerMaps.values())\n      .reduce((listeners, map) => listeners.concat(Array.from(map.values())), [] as EventListener[])\n  }\n\n  // Binding observer delegate\n\n  /** @hidden */\n  bindingConnected(binding: Binding) {\n    this.fetchEventListenerForBinding(binding).bindingConnected(binding)\n  }\n\n  /** @hidden */\n  bindingDisconnected(binding: Binding) {\n    this.fetchEventListenerForBinding(binding).bindingDisconnected(binding)\n  }\n\n  // Error handling\n\n  handleError(error: Error, message: string, detail: object = {}) {\n    this.application.handleError(error, `Error ${message}`, detail)\n  }\n\n  private fetchEventListenerForBinding(binding: Binding): EventListener {\n    const { eventTarget, eventName, eventOptions } = binding\n    return this.fetchEventListener(eventTarget, eventName, eventOptions)\n  }\n\n  private fetchEventListener(eventTarget: EventTarget, eventName: string, eventOptions: AddEventListenerOptions): EventListener {\n    const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget)\n    const cacheKey = this.cacheKey(eventName, eventOptions)\n    let eventListener = eventListenerMap.get(cacheKey)\n    if (!eventListener) {\n      eventListener = this.createEventListener(eventTarget, eventName, eventOptions)\n      eventListenerMap.set(cacheKey, eventListener)\n    }\n    return eventListener\n  }\n\n  private createEventListener(eventTarget: EventTarget, eventName: string, eventOptions: AddEventListenerOptions): EventListener {\n    const eventListener = new EventListener(eventTarget, eventName, eventOptions)\n    if (this.started) {\n      eventListener.connect()\n    }\n    return eventListener\n  }\n\n  private fetchEventListenerMapForEventTarget(eventTarget: EventTarget): Map<string, EventListener> {\n    let eventListenerMap = this.eventListenerMaps.get(eventTarget)\n    if (!eventListenerMap) {\n      eventListenerMap = new Map\n      this.eventListenerMaps.set(eventTarget, eventListenerMap)\n    }\n    return eventListenerMap\n  }\n\n  private cacheKey(eventName: string, eventOptions: any): string {\n    const parts = [ eventName ]\n    Object.keys(eventOptions).sort().forEach(key => {\n      parts.push(`${eventOptions[key] ? \"\" : \"!\"}${key}`)\n    })\n    return parts.join(\":\")\n  }\n}\n","export interface ActionDescriptor {\n  eventTarget: EventTarget\n  eventOptions: AddEventListenerOptions\n  eventName: string\n  identifier: string\n  methodName: string\n}\n\n// capture nos.:            12   23 4               43   1 5   56 7      768 9  98\nconst descriptorPattern = /^((.+?)(@(window|document))?->)?(.+?)(#([^:]+?))(:(.+))?$/\n\nexport function parseActionDescriptorString(descriptorString: string): Partial<ActionDescriptor> {\n  const source = descriptorString.trim()\n  const matches = source.match(descriptorPattern) || []\n  return {\n    eventTarget:  parseEventTarget(matches[4]),\n    eventName:    matches[2],\n    eventOptions: matches[9] ? parseEventOptions(matches[9]) : {},\n    identifier:   matches[5],\n    methodName:   matches[7]\n  }\n}\n\nfunction parseEventTarget(eventTargetName: string): EventTarget | undefined {\n  if (eventTargetName == \"window\") {\n    return window\n  } else if (eventTargetName == \"document\") {\n    return document\n  }\n}\n\nfunction parseEventOptions(eventOptions: string): AddEventListenerOptions {\n  return eventOptions.split(\":\").reduce((options, token) =>\n    Object.assign(options, { [token.replace(/^!/, \"\")]: !/^!/.test(token) })\n  , {})\n}\n\nexport function stringifyEventTarget(eventTarget: EventTarget) {\n  if (eventTarget == window) {\n    return \"window\"\n  } else if (eventTarget == document) {\n    return \"document\"\n  }\n}\n","import { ActionDescriptor, parseActionDescriptorString, stringifyEventTarget } from \"./action_descriptor\"\nimport { Token } from \"@stimulus/mutation-observers\"\n\nexport class Action {\n  readonly element: Element\n  readonly index: number\n  readonly eventTarget: EventTarget\n  readonly eventName: string\n  readonly eventOptions: AddEventListenerOptions\n  readonly identifier: string\n  readonly methodName: string\n\n  static forToken(token: Token) {\n    return new this(token.element, token.index, parseActionDescriptorString(token.content))\n  }\n\n  constructor(element: Element, index: number, descriptor: Partial<ActionDescriptor>) {\n    this.element      = element\n    this.index        = index\n    this.eventTarget  = descriptor.eventTarget || element\n    this.eventName    = descriptor.eventName || getDefaultEventNameForElement(element) || error(\"missing event name\")\n    this.eventOptions = descriptor.eventOptions || {}\n    this.identifier   = descriptor.identifier || error(\"missing identifier\")\n    this.methodName   = descriptor.methodName || error(\"missing method name\")\n  }\n\n  toString() {\n    const eventNameSuffix = this.eventTargetName ? `@${this.eventTargetName}` : \"\"\n    return `${this.eventName}${eventNameSuffix}->${this.identifier}#${this.methodName}`\n  }\n\n  private get eventTargetName() {\n    return stringifyEventTarget(this.eventTarget)\n  }\n}\n\nconst defaultEventNames: { [tagName: string]: (element: Element) => string } = {\n  \"a\":        e => \"click\",\n  \"button\":   e => \"click\",\n  \"form\":     e => \"submit\",\n  \"input\":    e => e.getAttribute(\"type\") == \"submit\" ? \"click\" : \"input\",\n  \"select\":   e => \"change\",\n  \"textarea\": e => \"input\"\n}\n\nexport function getDefaultEventNameForElement(element: Element): string | undefined {\n  const tagName = element.tagName.toLowerCase()\n  if (tagName in defaultEventNames) {\n    return defaultEventNames[tagName](element)\n  }\n}\n\nfunction error(message: string): never {\n  throw new Error(message)\n}\n","import { Action } from \"./action\"\nimport { Context } from \"./context\"\nimport { Controller } from \"./controller\"\nimport { Scope } from \"./scope\"\n\nexport class Binding {\n  readonly context: Context\n  readonly action: Action\n\n  constructor(context: Context, action: Action) {\n    this.context = context\n    this.action = action\n  }\n\n  get index(): number {\n    return this.action.index\n  }\n\n  get eventTarget(): EventTarget {\n    return this.action.eventTarget\n  }\n\n  get eventOptions(): AddEventListenerOptions {\n    return this.action.eventOptions\n  }\n\n  get identifier(): string {\n    return this.context.identifier\n  }\n\n  handleEvent(event: Event) {\n    if (this.willBeInvokedByEvent(event)) {\n      this.invokeWithEvent(event)\n    }\n  }\n\n  get eventName(): string {\n    return this.action.eventName\n  }\n\n  get method(): Function {\n    const method = (this.controller as any)[this.methodName]\n    if (typeof method == \"function\") {\n      return method\n    }\n    throw new Error(`Action \"${this.action}\" references undefined method \"${this.methodName}\"`)\n  }\n\n  private invokeWithEvent(event: Event) {\n    try {\n      this.method.call(this.controller, event)\n    } catch (error) {\n      const { identifier, controller, element, index } = this\n      const detail = { identifier, controller, element, index, event }\n      this.context.handleError(error, `invoking action \"${this.action}\"`, detail)\n    }\n  }\n\n  private willBeInvokedByEvent(event: Event): boolean {\n    const eventTarget = event.target\n    if (this.element === eventTarget) {\n      return true\n    } else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {\n      return this.scope.containsElement(eventTarget)\n    } else {\n      return this.scope.containsElement(this.action.element)\n    }\n  }\n\n  private get controller(): Controller {\n    return this.context.controller\n  }\n\n  private get methodName(): string {\n    return this.action.methodName\n  }\n\n  private get element(): Element {\n    return this.scope.element\n  }\n\n  private get scope(): Scope {\n    return this.context.scope\n  }\n}\n","export interface ElementObserverDelegate {\n  matchElement(element: Element): boolean\n  matchElementsInTree(tree: Element): Element[]\n\n  elementMatched?(element: Element): void\n  elementUnmatched?(element: Element): void\n  elementAttributeChanged?(element: Element, attributeName: string): void\n}\n\nexport class ElementObserver {\n  element: Element\n  started: boolean\n  private delegate: ElementObserverDelegate\n\n  private elements: Set<Element>\n  private mutationObserver: MutationObserver\n\n  constructor(element: Element, delegate: ElementObserverDelegate) {\n    this.element = element\n    this.started = false\n    this.delegate = delegate\n\n    this.elements = new Set\n    this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations))\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      this.mutationObserver.observe(this.element, { attributes: true, childList: true, subtree: true })\n      this.refresh()\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords()\n      this.mutationObserver.disconnect()\n      this.started = false\n    }\n  }\n\n  refresh() {\n    if (this.started) {\n      const matches = new Set(this.matchElementsInTree())\n\n      for (const element of Array.from(this.elements)) {\n        if (!matches.has(element)) {\n          this.removeElement(element)\n        }\n      }\n\n      for (const element of Array.from(matches)) {\n        this.addElement(element)\n      }\n    }\n  }\n\n  // Mutation record processing\n\n  private processMutations(mutations: MutationRecord[]) {\n    if (this.started) {\n      for (const mutation of mutations) {\n        this.processMutation(mutation)\n      }\n    }\n  }\n\n  private processMutation(mutation: MutationRecord) {\n    if (mutation.type == \"attributes\") {\n      this.processAttributeChange(mutation.target, mutation.attributeName!)\n    } else if (mutation.type == \"childList\") {\n      this.processRemovedNodes(mutation.removedNodes)\n      this.processAddedNodes(mutation.addedNodes)\n    }\n  }\n\n  private processAttributeChange(node: Node, attributeName: string) {\n    const element = node as Element\n    if (this.elements.has(element)) {\n      if (this.delegate.elementAttributeChanged && this.matchElement(element)) {\n        this.delegate.elementAttributeChanged(element, attributeName)\n      } else {\n        this.removeElement(element)\n      }\n    } else if (this.matchElement(element)) {\n      this.addElement(element)\n    }\n  }\n\n  private processRemovedNodes(nodes: NodeList) {\n    for (const node of Array.from(nodes)) {\n      const element = this.elementFromNode(node)\n      if (element) {\n        this.processTree(element, this.removeElement)\n      }\n    }\n  }\n\n  private processAddedNodes(nodes: NodeList) {\n    for (const node of Array.from(nodes)) {\n      const element = this.elementFromNode(node)\n      if (element && this.elementIsActive(element)) {\n        this.processTree(element, this.addElement)\n      }\n    }\n  }\n\n  // Element matching\n\n  private matchElement(element: Element): boolean {\n    return this.delegate.matchElement(element)\n  }\n\n  private matchElementsInTree(tree: Element = this.element): Element[] {\n    return this.delegate.matchElementsInTree(tree)\n  }\n\n  private processTree(tree: Element, processor: (element: Element) => void) {\n    for (const element of this.matchElementsInTree(tree)) {\n      processor.call(this, element)\n    }\n  }\n\n  private elementFromNode(node: Node): Element | undefined {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      return node as Element\n    }\n  }\n\n  private elementIsActive(element: Element): boolean {\n    if (element.isConnected != this.element.isConnected) {\n      return false\n    } else {\n      return this.element.contains(element)\n    }\n  }\n\n  // Element tracking\n\n  private addElement(element: Element) {\n    if (!this.elements.has(element)) {\n      if (this.elementIsActive(element)) {\n        this.elements.add(element)\n        if (this.delegate.elementMatched) {\n          this.delegate.elementMatched(element)\n        }\n      }\n    }\n  }\n\n  private removeElement(element: Element) {\n    if (this.elements.has(element)) {\n      this.elements.delete(element)\n      if (this.delegate.elementUnmatched) {\n        this.delegate.elementUnmatched(element)\n      }\n    }\n  }\n}\n","import { ElementObserver, ElementObserverDelegate } from \"./element_observer\"\n\nexport interface AttributeObserverDelegate {\n  elementMatchedAttribute?(element: Element, attributeName: string): void\n  elementAttributeValueChanged?(element: Element, attributeName: string): void\n  elementUnmatchedAttribute?(element: Element, attributeName: string): void\n}\n\nexport class AttributeObserver implements ElementObserverDelegate {\n  attributeName: string\n  private delegate: AttributeObserverDelegate\n\n  private elementObserver: ElementObserver\n\n  constructor(element: Element, attributeName: string, delegate: AttributeObserverDelegate) {\n    this.attributeName = attributeName\n    this.delegate = delegate\n\n    this.elementObserver = new ElementObserver(element, this)\n  }\n\n  get element(): Element {\n    return this.elementObserver.element\n  }\n\n  get selector(): string {\n    return `[${this.attributeName}]`\n  }\n\n  start() {\n    this.elementObserver.start()\n  }\n\n  stop() {\n    this.elementObserver.stop()\n  }\n\n  refresh() {\n    this.elementObserver.refresh()\n  }\n\n  get started(): boolean {\n    return this.elementObserver.started\n  }\n\n  // Element observer delegate\n\n  matchElement(element: Element): boolean {\n    return element.hasAttribute(this.attributeName)\n  }\n\n  matchElementsInTree(tree: Element): Element[] {\n    const match = this.matchElement(tree) ? [tree] : []\n    const matches = Array.from(tree.querySelectorAll(this.selector))\n    return match.concat(matches)\n  }\n\n  elementMatched(element: Element) {\n    if (this.delegate.elementMatchedAttribute) {\n      this.delegate.elementMatchedAttribute(element, this.attributeName)\n    }\n  }\n\n  elementUnmatched(element: Element) {\n    if (this.delegate.elementUnmatchedAttribute) {\n      this.delegate.elementUnmatchedAttribute(element, this.attributeName)\n    }\n  }\n\n  elementAttributeChanged(element: Element, attributeName: string) {\n    if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {\n      this.delegate.elementAttributeValueChanged(element, attributeName)\n    }\n  }\n}\n","export interface StringMapObserverDelegate {\n  getStringMapKeyForAttribute(attributeName: string): string | undefined\n  stringMapKeyAdded?(key: string, attributeName: string): void\n  stringMapValueChanged?(value: string | null, key: string): void\n  stringMapKeyRemoved?(key: string, attributeName: string): void\n}\n\nexport class StringMapObserver {\n  readonly element: Element\n  readonly delegate: StringMapObserverDelegate\n  private started: boolean\n  private stringMap: Map<string, string>\n  private mutationObserver: MutationObserver\n\n  constructor(element: Element, delegate: StringMapObserverDelegate) {\n    this.element = element\n    this.delegate = delegate\n    this.started = false\n    this.stringMap = new Map\n    this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations))\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      this.mutationObserver.observe(this.element, { attributes: true })\n      this.refresh()\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords()\n      this.mutationObserver.disconnect()\n      this.started = false\n    }\n  }\n\n  refresh() {\n    if (this.started) {\n      for (const attributeName of this.knownAttributeNames) {\n        this.refreshAttribute(attributeName)\n      }\n    }\n  }\n\n  // Mutation record processing\n\n  private processMutations(mutations: MutationRecord[]) {\n    if (this.started) {\n      for (const mutation of mutations) {\n        this.processMutation(mutation)\n      }\n    }\n  }\n\n  private processMutation(mutation: MutationRecord) {\n    const attributeName = mutation.attributeName\n    if (attributeName) {\n      this.refreshAttribute(attributeName)\n    }\n  }\n\n  // State tracking\n\n  private refreshAttribute(attributeName: string) {\n    const key = this.delegate.getStringMapKeyForAttribute(attributeName)\n    if (key != null) {\n      if (!this.stringMap.has(attributeName)) {\n        this.stringMapKeyAdded(key, attributeName)\n      }\n\n      const value = this.element.getAttribute(attributeName)\n      if (this.stringMap.get(attributeName) != value) {\n        this.stringMapValueChanged(value, key)\n      }\n\n      if (value == null) {\n        this.stringMap.delete(attributeName)\n        this.stringMapKeyRemoved(key, attributeName)\n      } else {\n        this.stringMap.set(attributeName, value)\n      }\n    }\n  }\n\n  private stringMapKeyAdded(key: string, attributeName: string) {\n    if (this.delegate.stringMapKeyAdded) {\n      this.delegate.stringMapKeyAdded(key, attributeName)\n    }\n  }\n\n  private stringMapValueChanged(value: string | null, key: string) {\n    if (this.delegate.stringMapValueChanged) {\n      this.delegate.stringMapValueChanged(value, key)\n    }\n  }\n\n  private stringMapKeyRemoved(key: string, attributeName: string) {\n    if (this.delegate.stringMapKeyRemoved) {\n      this.delegate.stringMapKeyRemoved(key, attributeName)\n    }\n  }\n\n  private get knownAttributeNames() {\n    return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)))\n  }\n\n  private get currentAttributeNames() {\n    return Array.from(this.element.attributes).map(attribute => attribute.name)\n  }\n\n  private get recordedAttributeNames() {\n    return Array.from(this.stringMap.keys())\n  }\n}\n","export function add<K, V>(map: Map<K, Set<V>>, key: K, value: V) {\n  fetch(map, key).add(value)\n}\n\nexport function del<K, V>(map: Map<K, Set<V>>, key: K, value: V) {\n  fetch(map, key).delete(value)\n  prune(map, key)\n}\n\nexport function fetch<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  let values = map.get(key)\n  if (!values) {\n    values = new Set()\n    map.set(key, values)\n  }\n  return values\n}\n\nexport function prune<K, V>(map: Map<K, Set<V>>, key: K) {\n  const values = map.get(key)\n  if (values != null && values.size == 0) {\n    map.delete(key)\n  }\n}\n","import { add, del } from \"./set_operations\"\n\nexport class Multimap<K, V> {\n  private valuesByKey: Map<K, Set<V>>\n\n  constructor() {\n    this.valuesByKey = new Map<K, Set<V>>()\n  }\n\n  get values(): V[] {\n    const sets = Array.from(this.valuesByKey.values())\n    return sets.reduce((values, set) => values.concat(Array.from(set)), <V[]> [])\n  }\n\n  get size(): number {\n    const sets = Array.from(this.valuesByKey.values())\n    return sets.reduce((size, set) => size + set.size, 0)\n  }\n\n  add(key: K, value: V) {\n    add(this.valuesByKey, key, value)\n  }\n\n  delete(key: K, value: V) {\n    del(this.valuesByKey, key, value)\n  }\n\n  has(key: K, value: V): boolean {\n    const values = this.valuesByKey.get(key)\n    return values != null && values.has(value)\n  }\n\n  hasKey(key: K): boolean {\n    return this.valuesByKey.has(key)\n  }\n\n  hasValue(value: V): boolean {\n    const sets = Array.from(this.valuesByKey.values())\n    return sets.some(set => set.has(value))\n  }\n\n  getValuesForKey(key: K): V[] {\n    const values = this.valuesByKey.get(key)\n    return values ? Array.from(values) : []\n  }\n\n  getKeysForValue(value: V): K[] {\n    return Array.from(this.valuesByKey)\n      .filter(([key, values]) => values.has(value))\n      .map(([key, values]) => key)\n  }\n}\n","import { Multimap } from \"./multimap\"\nimport { add, del } from \"./set_operations\"\n\nexport class IndexedMultimap<K, V> extends Multimap<K, V> {\n  private keysByValue: Map<V, Set<K>>\n\n  constructor() {\n    super()\n    this.keysByValue = new Map\n  }\n\n  get values(): V[] {\n    return Array.from(this.keysByValue.keys())\n  }\n\n  add(key: K, value: V) {\n    super.add(key, value)\n    add(this.keysByValue, value, key)\n  }\n\n  delete(key: K, value: V) {\n    super.delete(key, value)\n    del(this.keysByValue, value, key)\n  }\n\n  hasValue(value: V): boolean {\n    return this.keysByValue.has(value)\n  }\n\n  getKeysForValue(value: V): K[] {\n    const set = this.keysByValue.get(value)\n    return set ? Array.from(set) : []\n  }\n}\n","export * from \"./indexed_multimap\"\nexport * from \"./multimap\"\nexport * from \"./set_operations\"\n","import { AttributeObserver, AttributeObserverDelegate } from \"./attribute_observer\"\nimport { Multimap } from \"@stimulus/multimap\"\n\nexport interface Token {\n  element: Element\n  attributeName: string\n  index: number\n  content: string\n}\n\nexport interface TokenListObserverDelegate {\n  tokenMatched(token: Token): void\n  tokenUnmatched(token: Token): void\n}\n\nexport class TokenListObserver implements AttributeObserverDelegate {\n  private attributeObserver: AttributeObserver\n  private delegate: TokenListObserverDelegate\n  private tokensByElement: Multimap<Element, Token>\n\n  constructor(element: Element, attributeName: string, delegate: TokenListObserverDelegate) {\n    this.attributeObserver = new AttributeObserver(element, attributeName, this)\n    this.delegate = delegate\n    this.tokensByElement = new Multimap\n  }\n\n  get started(): boolean {\n    return this.attributeObserver.started\n  }\n\n  start() {\n    this.attributeObserver.start()\n  }\n\n  stop() {\n    this.attributeObserver.stop()\n  }\n\n  refresh() {\n    this.attributeObserver.refresh()\n  }\n\n  get element(): Element {\n    return this.attributeObserver.element\n  }\n\n  get attributeName(): string {\n    return this.attributeObserver.attributeName\n  }\n\n  // Attribute observer delegate\n\n  elementMatchedAttribute(element: Element) {\n    this.tokensMatched(this.readTokensForElement(element))\n  }\n\n  elementAttributeValueChanged(element: Element) {\n    const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element)\n    this.tokensUnmatched(unmatchedTokens)\n    this.tokensMatched(matchedTokens)\n  }\n\n  elementUnmatchedAttribute(element: Element) {\n    this.tokensUnmatched(this.tokensByElement.getValuesForKey(element))\n  }\n\n  private tokensMatched(tokens: Token[]) {\n    tokens.forEach(token => this.tokenMatched(token))\n  }\n\n  private tokensUnmatched(tokens: Token[]) {\n    tokens.forEach(token => this.tokenUnmatched(token))\n  }\n\n  private tokenMatched(token: Token) {\n    this.delegate.tokenMatched(token)\n    this.tokensByElement.add(token.element, token)\n  }\n\n  private tokenUnmatched(token: Token) {\n    this.delegate.tokenUnmatched(token)\n    this.tokensByElement.delete(token.element, token)\n  }\n\n  private refreshTokensForElement(element: Element): [Token[], Token[]] {\n    const previousTokens = this.tokensByElement.getValuesForKey(element)\n    const currentTokens = this.readTokensForElement(element)\n    const firstDifferingIndex = zip(previousTokens, currentTokens)\n      .findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken))\n\n    if (firstDifferingIndex == -1) {\n      return [[], []]\n    } else {\n      return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)]\n    }\n  }\n\n  private readTokensForElement(element: Element): Token[] {\n    const attributeName = this.attributeName\n    const tokenString = element.getAttribute(attributeName) || \"\"\n    return parseTokenString(tokenString, element, attributeName)\n  }\n}\n\nfunction parseTokenString(tokenString: string, element: Element, attributeName: string): Token[] {\n  return tokenString.trim().split(/\\s+/).filter(content => content.length)\n    .map((content, index) => ({ element, attributeName, content, index }))\n}\n\nfunction zip<L, R>(left: L[], right: R[]): [L | undefined, R | undefined][] {\n  const length = Math.max(left.length, right.length)\n  return Array.from({ length }, (_, index) => [left[index], right[index]] as [L, R])\n}\n\nfunction tokensAreEqual(left?: Token, right?: Token) {\n  return left && right && left.index == right.index && left.content == right.content\n}\n","import { Token, TokenListObserver, TokenListObserverDelegate } from \"./token_list_observer\"\n\nexport interface ValueListObserverDelegate<T> {\n  parseValueForToken(token: Token): T | undefined\n  elementMatchedValue(element: Element, value: T): void\n  elementUnmatchedValue(element: Element, value: T): void\n}\n\ninterface ParseResult<T> {\n  value?: T\n  error?: Error\n}\n\nexport class ValueListObserver<T> implements TokenListObserverDelegate {\n  private tokenListObserver: TokenListObserver\n  private delegate: ValueListObserverDelegate<T>\n  private parseResultsByToken: WeakMap<Token, ParseResult<T>>\n  private valuesByTokenByElement: WeakMap<Element, Map<Token, T>>\n\n  constructor(element: Element, attributeName: string, delegate: ValueListObserverDelegate<T>) {\n    this.tokenListObserver = new TokenListObserver(element, attributeName, this)\n    this.delegate = delegate\n    this.parseResultsByToken = new WeakMap\n    this.valuesByTokenByElement = new WeakMap\n  }\n\n  get started(): boolean {\n    return this.tokenListObserver.started\n  }\n\n  start() {\n    this.tokenListObserver.start()\n  }\n\n  stop() {\n    this.tokenListObserver.stop()\n  }\n\n  refresh() {\n    this.tokenListObserver.refresh()\n  }\n\n  get element(): Element {\n    return this.tokenListObserver.element\n  }\n\n  get attributeName(): string {\n    return this.tokenListObserver.attributeName\n  }\n\n  tokenMatched(token: Token) {\n    const { element } = token\n    const { value } = this.fetchParseResultForToken(token)\n    if (value) {\n      this.fetchValuesByTokenForElement(element).set(token, value)\n      this.delegate.elementMatchedValue(element, value)\n    }\n  }\n\n  tokenUnmatched(token: Token) {\n    const { element } = token\n    const { value } = this.fetchParseResultForToken(token)\n    if (value) {\n      this.fetchValuesByTokenForElement(element).delete(token)\n      this.delegate.elementUnmatchedValue(element, value)\n    }\n  }\n\n  private fetchParseResultForToken(token: Token) {\n    let parseResult = this.parseResultsByToken.get(token)\n    if (!parseResult) {\n      parseResult = this.parseToken(token)\n      this.parseResultsByToken.set(token, parseResult)\n    }\n    return parseResult\n  }\n\n  private fetchValuesByTokenForElement(element: Element) {\n    let valuesByToken = this.valuesByTokenByElement.get(element)\n    if (!valuesByToken) {\n      valuesByToken = new Map\n      this.valuesByTokenByElement.set(element, valuesByToken)\n    }\n    return valuesByToken\n  }\n\n  private parseToken(token: Token): ParseResult<T> {\n    try {\n      const value = this.delegate.parseValueForToken(token)\n      return { value }\n    } catch (error) {\n      return { error }\n    }\n  }\n}\n","import { Action } from \"./action\"\nimport { Binding } from \"./binding\"\nimport { Context } from \"./context\"\nimport { ErrorHandler } from \"./error_handler\"\nimport { Schema } from \"./schema\"\nimport { Token, ValueListObserver, ValueListObserverDelegate } from \"@stimulus/mutation-observers\"\n\nexport interface BindingObserverDelegate extends ErrorHandler {\n  bindingConnected(binding: Binding): void\n  bindingDisconnected(binding: Binding): void\n}\n\nexport class BindingObserver implements ValueListObserverDelegate<Action> {\n  readonly context: Context\n  private delegate: BindingObserverDelegate\n  private valueListObserver?: ValueListObserver<Action>\n  private bindingsByAction: Map<Action, Binding>\n\n  constructor(context: Context, delegate: BindingObserverDelegate) {\n    this.context = context\n    this.delegate = delegate\n    this.bindingsByAction = new Map\n  }\n\n  start() {\n    if (!this.valueListObserver) {\n      this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this)\n      this.valueListObserver.start()\n    }\n  }\n\n  stop() {\n    if (this.valueListObserver) {\n      this.valueListObserver.stop()\n      delete this.valueListObserver\n      this.disconnectAllActions()\n    }\n  }\n\n  get element() {\n    return this.context.element\n  }\n\n  get identifier() {\n    return this.context.identifier\n  }\n\n  get actionAttribute() {\n    return this.schema.actionAttribute\n  }\n\n  get schema(): Schema {\n    return this.context.schema\n  }\n\n  get bindings(): Binding[] {\n    return Array.from(this.bindingsByAction.values())\n  }\n\n  private connectAction(action: Action) {\n    const binding = new Binding(this.context, action)\n    this.bindingsByAction.set(action, binding)\n    this.delegate.bindingConnected(binding)\n  }\n\n  private disconnectAction(action: Action) {\n    const binding = this.bindingsByAction.get(action)\n    if (binding) {\n      this.bindingsByAction.delete(action)\n      this.delegate.bindingDisconnected(binding)\n    }\n  }\n\n  private disconnectAllActions() {\n    this.bindings.forEach(binding => this.delegate.bindingDisconnected(binding))\n    this.bindingsByAction.clear()\n  }\n\n  // Value observer delegate\n\n  parseValueForToken(token: Token): Action | undefined {\n    const action = Action.forToken(token)\n    if (action.identifier == this.identifier) {\n      return action\n    }\n  }\n\n  elementMatchedValue(element: Element, action: Action) {\n    this.connectAction(action)\n  }\n\n  elementUnmatchedValue(element: Element, action: Action) {\n    this.disconnectAction(action)\n  }\n}\n","import { Context } from \"./context\"\nimport { StringMapObserver, StringMapObserverDelegate } from \"@stimulus/mutation-observers\"\nimport { ValueDescriptor } from \"./value_properties\"\n\nexport class ValueObserver implements StringMapObserverDelegate {\n  readonly context: Context\n  readonly receiver: any\n  private stringMapObserver: StringMapObserver\n  private valueDescriptorMap: { [attributeName: string]: ValueDescriptor }\n\n  constructor(context: Context, receiver: any) {\n    this.context = context\n    this.receiver = receiver\n    this.stringMapObserver = new StringMapObserver(this.element, this)\n    this.valueDescriptorMap = (this.controller as any).valueDescriptorMap\n    this.invokeChangedCallbacksForDefaultValues()\n  }\n\n  start() {\n    this.stringMapObserver.start()\n  }\n\n  stop() {\n    this.stringMapObserver.stop()\n  }\n\n  get element() {\n    return this.context.element\n  }\n\n  get controller() {\n    return this.context.controller\n  }\n\n  // String map observer delegate\n\n  getStringMapKeyForAttribute(attributeName: string) {\n    if (attributeName in this.valueDescriptorMap) {\n      return this.valueDescriptorMap[attributeName].name\n    }\n  }\n\n  stringMapValueChanged(attributeValue: string | null, name: string) {\n    this.invokeChangedCallbackForValue(name)\n  }\n\n  private invokeChangedCallbacksForDefaultValues() {\n    for (const { key, name, defaultValue } of this.valueDescriptors) {\n      if (defaultValue != undefined && !this.controller.data.has(key)) {\n        this.invokeChangedCallbackForValue(name)\n      }\n    }\n  }\n\n  private invokeChangedCallbackForValue(name: string) {\n    const methodName = `${name}Changed`\n    const method = this.receiver[methodName]\n    if (typeof method == \"function\") {\n      const value = this.receiver[name]\n      method.call(this.receiver, value)\n    }\n  }\n\n  private get valueDescriptors() {\n    const { valueDescriptorMap } = this\n    return Object.keys(valueDescriptorMap).map(key => valueDescriptorMap[key])\n  }\n}\n","import { Application } from \"./application\"\nimport { BindingObserver } from \"./binding_observer\"\nimport { Controller } from \"./controller\"\nimport { Dispatcher } from \"./dispatcher\"\nimport { ErrorHandler } from \"./error_handler\"\nimport { Module } from \"./module\"\nimport { Schema } from \"./schema\"\nimport { Scope } from \"./scope\"\nimport { ValueObserver } from \"./value_observer\"\n\nexport class Context implements ErrorHandler {\n  readonly module: Module\n  readonly scope: Scope\n  readonly controller: Controller\n  private bindingObserver: BindingObserver\n  private valueObserver: ValueObserver\n\n  constructor(module: Module, scope: Scope) {\n    this.module = module\n    this.scope = scope\n    this.controller = new module.controllerConstructor(this)\n    this.bindingObserver = new BindingObserver(this, this.dispatcher)\n    this.valueObserver = new ValueObserver(this, this.controller)\n\n    try {\n      this.controller.initialize()\n    } catch (error) {\n      this.handleError(error, \"initializing controller\")\n    }\n  }\n\n  connect() {\n    this.bindingObserver.start()\n    this.valueObserver.start()\n\n    try {\n      this.controller.connect()\n    } catch (error) {\n      this.handleError(error, \"connecting controller\")\n    }\n  }\n\n  disconnect() {\n    try {\n      this.controller.disconnect()\n    } catch (error) {\n      this.handleError(error, \"disconnecting controller\")\n    }\n\n    this.valueObserver.stop()\n    this.bindingObserver.stop()\n  }\n\n  get application(): Application {\n    return this.module.application\n  }\n\n  get identifier(): string {\n    return this.module.identifier\n  }\n\n  get schema(): Schema {\n    return this.application.schema\n  }\n\n  get dispatcher(): Dispatcher {\n    return this.application.dispatcher\n  }\n\n  get element(): Element {\n    return this.scope.element\n  }\n\n  get parentElement(): Element | null {\n    return this.element.parentElement\n  }\n\n  // Error handling\n\n  handleError(error: Error, message: string, detail: object = {}) {\n    const { identifier, controller, element } = this\n    detail = Object.assign({ identifier, controller, element }, detail)\n    this.application.handleError(error, `Error ${message}`, detail)\n  }\n}\n","import { Constructor } from \"./constructor\"\n\nexport function readInheritableStaticArrayValues<T, U = string>(constructor: Constructor<T>, propertyName: string) {\n  const ancestors = getAncestorsForConstructor(constructor)\n  return Array.from(ancestors.reduce((values, constructor) => {\n    getOwnStaticArrayValues(constructor, propertyName).forEach(name => values.add(name))\n    return values\n  }, new Set as Set<U>))\n}\n\nexport function readInheritableStaticObjectPairs<T, U>(constructor: Constructor<T>, propertyName: string) {\n  const ancestors = getAncestorsForConstructor(constructor)\n  return ancestors.reduce((pairs, constructor) => {\n    pairs.push(...getOwnStaticObjectPairs(constructor, propertyName) as any)\n    return pairs\n  }, [] as [string, U][])\n}\n\nfunction getAncestorsForConstructor<T>(constructor: Constructor<T>) {\n  const ancestors: Constructor<{}>[] = []\n  while (constructor) {\n    ancestors.push(constructor)\n    constructor = Object.getPrototypeOf(constructor)\n  }\n  return ancestors.reverse()\n}\n\nfunction getOwnStaticArrayValues<T>(constructor: Constructor<T>, propertyName: string) {\n  const definition = (constructor as any)[propertyName]\n  return Array.isArray(definition) ? definition : []\n}\n\nfunction getOwnStaticObjectPairs<T, U>(constructor: Constructor<T>, propertyName: string) {\n  const definition = (constructor as any)[propertyName]\n  return definition ? Object.keys(definition).map(key => [key, definition[key]] as [string, U]) : []\n}\n","import { Constructor } from \"./constructor\"\nimport { readInheritableStaticArrayValues } from \"./inheritable_statics\"\n\n/** @hidden */\nexport type Blessing<T> = (constructor: Constructor<T>) => PropertyDescriptorMap\n\n/** @hidden */\nexport interface Blessable<T> extends Constructor<T> {\n  readonly blessings?: Blessing<T>[]\n}\n\n/** @hidden */\nexport function bless<T>(constructor: Blessable<T>): Constructor<T> {\n  return shadow(constructor, getBlessedProperties(constructor))\n}\n\nfunction shadow<T>(constructor: Constructor<T>, properties: PropertyDescriptorMap) {\n  const shadowConstructor = extend(constructor)\n  const shadowProperties = getShadowProperties(constructor.prototype, properties)\n  Object.defineProperties(shadowConstructor.prototype, shadowProperties)\n  return shadowConstructor\n}\n\nfunction getBlessedProperties<T>(constructor: Constructor<T>) {\n  const blessings = readInheritableStaticArrayValues(constructor, \"blessings\") as Blessing<T>[]\n  return blessings.reduce((blessedProperties, blessing) => {\n    const properties = blessing(constructor)\n    for (const key in properties) {\n      const descriptor = blessedProperties[key] || {} as PropertyDescriptor\n      blessedProperties[key] = Object.assign(descriptor, properties[key])\n    }\n    return blessedProperties\n  }, {} as PropertyDescriptorMap)\n}\n\nfunction getShadowProperties<T>(prototype: any, properties: PropertyDescriptorMap) {\n  return getOwnKeys(properties).reduce((shadowProperties, key) => {\n    const descriptor = getShadowedDescriptor(prototype, properties, key)\n    if (descriptor) {\n      Object.assign(shadowProperties, { [key]: descriptor })\n    }\n    return shadowProperties\n  }, {} as PropertyDescriptorMap)\n}\n\nfunction getShadowedDescriptor(prototype: any, properties: PropertyDescriptorMap, key: string | symbol) {\n  const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key)\n  const shadowedByValue = shadowingDescriptor && \"value\" in shadowingDescriptor\n  if (!shadowedByValue) {\n    const descriptor = Object.getOwnPropertyDescriptor(properties, key)!.value\n    if (shadowingDescriptor) {\n      descriptor.get = shadowingDescriptor.get || descriptor.get\n      descriptor.set = shadowingDescriptor.set || descriptor.set\n    }\n    return descriptor\n  }\n}\n\nconst getOwnKeys = (() => {\n  if (typeof Object.getOwnPropertySymbols == \"function\") {\n    return (object: any) => [\n      ...Object.getOwnPropertyNames(object),\n      ...Object.getOwnPropertySymbols(object)\n    ]\n  } else {\n    return Object.getOwnPropertyNames\n  }\n})()\n\nconst extend = (() => {\n  function extendWithReflect<T extends Constructor<{}>>(constructor: T): T {\n    function extended() {\n      return Reflect.construct(constructor, arguments, new.target)\n    }\n\n    extended.prototype = Object.create(constructor.prototype, {\n      constructor: { value: extended }\n    })\n\n    Reflect.setPrototypeOf(extended, constructor)\n    return extended as any\n  }\n\n  function testReflectExtension() {\n    const a = function(this: any) { this.a.call(this) } as any\n    const b = extendWithReflect(a)\n    b.prototype.a = function() {}\n    return new b\n  }\n\n  try {\n    testReflectExtension()\n    return extendWithReflect\n  } catch (error) {\n    return <T extends Constructor<{}>>(constructor: T) => class extended extends constructor {}\n  }\n})()\n","import { bless } from \"./blessing\"\nimport { ControllerConstructor } from \"./controller\"\n\nexport interface Definition {\n  identifier: string\n  controllerConstructor: ControllerConstructor\n}\n\n/** @hidden */\nexport function blessDefinition(definition: Definition): Definition {\n  return {\n    identifier: definition.identifier,\n    controllerConstructor: bless(definition.controllerConstructor)\n  }\n}\n","import { Application } from \"./application\"\nimport { Context } from \"./context\"\nimport { ControllerConstructor } from \"./controller\"\nimport { Definition, blessDefinition } from \"./definition\"\nimport { Scope } from \"./scope\"\n\nexport class Module {\n  readonly application: Application\n  readonly definition: Definition\n  private contextsByScope: WeakMap<Scope, Context>\n  private connectedContexts: Set<Context>\n\n  constructor(application: Application, definition: Definition) {\n    this.application = application\n    this.definition = blessDefinition(definition)\n    this.contextsByScope = new WeakMap\n    this.connectedContexts = new Set\n  }\n\n  get identifier(): string {\n    return this.definition.identifier\n  }\n\n  get controllerConstructor(): ControllerConstructor {\n    return this.definition.controllerConstructor\n  }\n\n  get contexts(): Context[] {\n    return Array.from(this.connectedContexts)\n  }\n\n  connectContextForScope(scope: Scope) {\n    const context = this.fetchContextForScope(scope)\n    this.connectedContexts.add(context)\n    context.connect()\n  }\n\n  disconnectContextForScope(scope: Scope) {\n    const context = this.contextsByScope.get(scope)\n    if (context) {\n      this.connectedContexts.delete(context)\n      context.disconnect()\n    }\n  }\n\n  private fetchContextForScope(scope: Scope): Context {\n    let context = this.contextsByScope.get(scope)\n    if (!context) {\n      context = new Context(this, scope)\n      this.contextsByScope.set(scope, context)\n    }\n    return context\n  }\n}\n","import { Scope } from \"./scope\"\n\nexport class ClassMap {\n  readonly scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n  }\n\n  has(name: string) {\n    return this.data.has(this.getDataKey(name))\n  }\n\n  get(name: string) {\n    return this.data.get(this.getDataKey(name))\n  }\n\n  getAttributeName(name: string) {\n    return this.data.getAttributeNameForKey(this.getDataKey(name))\n  }\n\n  getDataKey(name: string) {\n    return `${name}-class`\n  }\n\n  get data() {\n    return this.scope.data\n  }\n}\n","export function camelize(value: string) {\n  return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase())\n}\n\nexport function capitalize(value: string) {\n  return value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nexport function dasherize(value: string) {\n  return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`)\n}\n","import { Scope } from \"./scope\"\nimport { dasherize } from \"./string_helpers\"\n\nexport class DataMap {\n  readonly scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n  }\n\n  get element(): Element {\n    return this.scope.element\n  }\n\n  get identifier(): string {\n    return this.scope.identifier\n  }\n\n  get(key: string): string | null {\n    const name = this.getAttributeNameForKey(key)\n    return this.element.getAttribute(name)\n  }\n\n  set(key: string, value: string): string | null {\n    const name = this.getAttributeNameForKey(key)\n    this.element.setAttribute(name, value)\n    return this.get(key)\n  }\n\n  has(key: string): boolean {\n    const name = this.getAttributeNameForKey(key)\n    return this.element.hasAttribute(name)\n  }\n\n  delete(key: string): boolean {\n    if (this.has(key)) {\n      const name = this.getAttributeNameForKey(key)\n      this.element.removeAttribute(name)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getAttributeNameForKey(key: string): string {\n    return `data-${this.identifier}-${dasherize(key)}`\n  }\n}\n","import { Logger } from \"./logger\"\n\nexport class Guide {\n  readonly logger: Logger\n  readonly warnedKeysByObject: WeakMap<any, Set<string>> = new WeakMap\n\n  constructor(logger: Logger) {\n    this.logger = logger\n  }\n\n  warn(object: any, key: string, message: string) {\n    let warnedKeys: Set<string> | undefined = this.warnedKeysByObject.get(object)\n\n    if (!warnedKeys) {\n      warnedKeys = new Set\n      this.warnedKeysByObject.set(object, warnedKeys)\n    }\n\n    if (!warnedKeys.has(key)) {\n      warnedKeys.add(key)\n      this.logger.warn(message, object)\n    }\n  }\n}\n","/** @hidden */\nexport function attributeValueContainsToken(attributeName: string, token: string) {\n  return `[${attributeName}~=\"${token}\"]`\n}\n","import { Scope } from \"./scope\"\nimport { attributeValueContainsToken } from \"./selectors\"\n\nexport class TargetSet {\n  readonly scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n  }\n\n  get element() {\n    return this.scope.element\n  }\n\n  get identifier() {\n    return this.scope.identifier\n  }\n\n  get schema() {\n    return this.scope.schema\n  }\n\n  has(targetName: string) {\n    return this.find(targetName) != null\n  }\n\n  find(...targetNames: string[]) {\n    return targetNames.reduce((target, targetName) =>\n         target\n      || this.findTarget(targetName)\n      || this.findLegacyTarget(targetName)\n    , undefined as Element | undefined)\n  }\n\n  findAll(...targetNames: string[]) {\n    return targetNames.reduce((targets, targetName) => [\n      ...targets,\n      ...this.findAllTargets(targetName),\n      ...this.findAllLegacyTargets(targetName)\n    ], [] as Element[])\n  }\n\n  private findTarget(targetName: string) {\n    const selector = this.getSelectorForTargetName(targetName)\n    return this.scope.findElement(selector)\n  }\n\n  private findAllTargets(targetName: string) {\n    const selector = this.getSelectorForTargetName(targetName)\n    return this.scope.findAllElements(selector)\n  }\n\n  private getSelectorForTargetName(targetName: string) {\n    const attributeName = `data-${this.identifier}-target`\n    return attributeValueContainsToken(attributeName, targetName)\n  }\n\n  private findLegacyTarget(targetName: string) {\n    const selector = this.getLegacySelectorForTargetName(targetName)\n    return this.deprecate(this.scope.findElement(selector), targetName)\n  }\n\n  private findAllLegacyTargets(targetName: string) {\n    const selector = this.getLegacySelectorForTargetName(targetName)\n    return this.scope.findAllElements(selector).map(element => this.deprecate(element, targetName))\n  }\n\n  private getLegacySelectorForTargetName(targetName: string) {\n    const targetDescriptor = `${this.identifier}.${targetName}`\n    return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor)\n  }\n\n  private deprecate<T>(element: T, targetName: string) {\n    if (element) {\n      const { identifier } = this\n      const attributeName = this.schema.targetAttribute\n      this.guide.warn(element, `target:${targetName}`,\n        `Please replace ${attributeName}=\"${identifier}.${targetName}\" with data-${identifier}-target=\"${targetName}\". ` +\n        `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`)\n    }\n    return element\n  }\n\n  private get guide() {\n    return this.scope.guide\n  }\n}\n","import { ClassMap } from \"./class_map\"\nimport { DataMap } from \"./data_map\"\nimport { Guide } from \"./guide\"\nimport { Logger } from \"./logger\"\nimport { Schema } from \"./schema\"\nimport { attributeValueContainsToken } from \"./selectors\"\nimport { TargetSet } from \"./target_set\"\n\nexport class Scope {\n  readonly schema: Schema\n  readonly element: Element\n  readonly identifier: string\n  readonly guide: Guide\n  readonly targets = new TargetSet(this)\n  readonly classes = new ClassMap(this)\n  readonly data = new DataMap(this)\n\n  constructor(schema: Schema, element: Element, identifier: string, logger: Logger) {\n    this.schema = schema\n    this.element = element\n    this.identifier = identifier\n    this.guide = new Guide(logger)\n  }\n\n  findElement(selector: string): Element | undefined {\n    return this.element.matches(selector)\n      ? this.element\n      : this.queryElements(selector).find(this.containsElement)\n  }\n\n  findAllElements(selector: string): Element[] {\n    return [\n      ...this.element.matches(selector) ? [this.element] : [],\n      ...this.queryElements(selector).filter(this.containsElement)\n    ]\n  }\n\n  containsElement = (element: Element): boolean => {\n    return element.closest(this.controllerSelector) === this.element\n  }\n\n  private queryElements(selector: string): Element[] {\n    return Array.from(this.element.querySelectorAll(selector))\n  }\n\n  private get controllerSelector(): string {\n    return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier)\n  }\n}\n","import { ErrorHandler } from \"./error_handler\"\nimport { Schema } from \"./schema\"\nimport { Scope } from \"./scope\"\nimport { Token, ValueListObserver, ValueListObserverDelegate } from \"@stimulus/mutation-observers\"\n\nexport interface ScopeObserverDelegate extends ErrorHandler {\n  createScopeForElementAndIdentifier(element: Element, identifier: string): Scope\n  scopeConnected(scope: Scope): void\n  scopeDisconnected(scope: Scope): void\n}\n\nexport class ScopeObserver implements ValueListObserverDelegate<Scope> {\n  readonly element: Element\n  readonly schema: Schema\n  private delegate: ScopeObserverDelegate\n  private valueListObserver: ValueListObserver<Scope>\n  private scopesByIdentifierByElement: WeakMap<Element, Map<string, Scope>>\n  private scopeReferenceCounts: WeakMap<Scope, number>\n\n  constructor(element: Element, schema: Schema, delegate: ScopeObserverDelegate) {\n    this.element = element\n    this.schema = schema\n    this.delegate = delegate\n    this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this)\n    this.scopesByIdentifierByElement = new WeakMap\n    this.scopeReferenceCounts = new WeakMap\n  }\n\n  start() {\n    this.valueListObserver.start()\n  }\n\n  stop() {\n    this.valueListObserver.stop()\n  }\n\n  get controllerAttribute() {\n    return this.schema.controllerAttribute\n  }\n\n  // Value observer delegate\n\n  /** @hidden */\n  parseValueForToken(token: Token): Scope | undefined {\n    const { element, content: identifier } = token\n    const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element)\n\n    let scope = scopesByIdentifier.get(identifier)\n    if (!scope) {\n      scope = this.delegate.createScopeForElementAndIdentifier(element, identifier)\n      scopesByIdentifier.set(identifier, scope)\n    }\n\n    return scope\n  }\n\n  /** @hidden */\n  elementMatchedValue(element: Element, value: Scope) {\n    const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1\n    this.scopeReferenceCounts.set(value, referenceCount)\n    if (referenceCount == 1) {\n      this.delegate.scopeConnected(value)\n    }\n  }\n\n  /** @hidden */\n  elementUnmatchedValue(element: Element, value: Scope) {\n    const referenceCount = this.scopeReferenceCounts.get(value)\n    if (referenceCount) {\n      this.scopeReferenceCounts.set(value, referenceCount - 1)\n      if (referenceCount == 1) {\n        this.delegate.scopeDisconnected(value)\n      }\n    }\n  }\n\n  private fetchScopesByIdentifierForElement(element: Element) {\n    let scopesByIdentifier = this.scopesByIdentifierByElement.get(element)\n    if (!scopesByIdentifier) {\n      scopesByIdentifier = new Map\n      this.scopesByIdentifierByElement.set(element, scopesByIdentifier)\n    }\n    return scopesByIdentifier\n  }\n}\n","import { Application } from \"./application\"\nimport { Context } from \"./context\"\nimport { Definition } from \"./definition\"\nimport { Module } from \"./module\"\nimport { Multimap } from \"@stimulus/multimap\"\nimport { Scope } from \"./scope\"\nimport { ScopeObserver, ScopeObserverDelegate } from \"./scope_observer\"\n\nexport class Router implements ScopeObserverDelegate {\n  readonly application: Application\n  private scopeObserver: ScopeObserver\n  private scopesByIdentifier: Multimap<string, Scope>\n  private modulesByIdentifier: Map<string, Module>\n\n  constructor(application: Application) {\n    this.application = application\n    this.scopeObserver = new ScopeObserver(this.element, this.schema, this)\n    this.scopesByIdentifier = new Multimap\n    this.modulesByIdentifier = new Map\n  }\n\n  get element() {\n    return this.application.element\n  }\n\n  get schema() {\n    return this.application.schema\n  }\n\n  get logger() {\n    return this.application.logger\n  }\n\n  get controllerAttribute(): string {\n    return this.schema.controllerAttribute\n  }\n\n  get modules() {\n    return Array.from(this.modulesByIdentifier.values())\n  }\n\n  get contexts() {\n    return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), [] as Context[])\n  }\n\n  start() {\n    this.scopeObserver.start()\n  }\n\n  stop() {\n    this.scopeObserver.stop()\n  }\n\n  loadDefinition(definition: Definition) {\n    this.unloadIdentifier(definition.identifier)\n    const module = new Module(this.application, definition)\n    this.connectModule(module)\n  }\n\n  unloadIdentifier(identifier: string) {\n    const module = this.modulesByIdentifier.get(identifier)\n    if (module) {\n      this.disconnectModule(module)\n    }\n  }\n\n  getContextForElementAndIdentifier(element: Element, identifier: string) {\n    const module = this.modulesByIdentifier.get(identifier)\n    if (module) {\n      return module.contexts.find(context => context.element == element)\n    }\n  }\n\n  // Error handler delegate\n\n  /** @hidden */\n  handleError(error: Error, message: string, detail: any) {\n    this.application.handleError(error, message, detail)\n  }\n\n  // Scope observer delegate\n\n  /** @hidden */\n  createScopeForElementAndIdentifier(element: Element, identifier: string) {\n    return new Scope(this.schema, element, identifier, this.logger)\n  }\n\n  /** @hidden */\n  scopeConnected(scope: Scope) {\n    this.scopesByIdentifier.add(scope.identifier, scope)\n    const module = this.modulesByIdentifier.get(scope.identifier)\n    if (module) {\n      module.connectContextForScope(scope)\n    }\n  }\n\n  /** @hidden */\n  scopeDisconnected(scope: Scope) {\n    this.scopesByIdentifier.delete(scope.identifier, scope)\n    const module = this.modulesByIdentifier.get(scope.identifier)\n    if (module) {\n      module.disconnectContextForScope(scope)\n    }\n  }\n\n  // Modules\n\n  private connectModule(module: Module) {\n    this.modulesByIdentifier.set(module.identifier, module)\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier)\n    scopes.forEach(scope => module.connectContextForScope(scope))\n  }\n\n  private disconnectModule(module: Module) {\n    this.modulesByIdentifier.delete(module.identifier)\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier)\n    scopes.forEach(scope => module.disconnectContextForScope(scope))\n  }\n}\n","export interface Schema {\n  controllerAttribute: string\n  actionAttribute: string\n  targetAttribute: string\n}\n\nexport const defaultSchema: Schema = {\n  controllerAttribute: \"data-controller\",\n  actionAttribute: \"data-action\",\n  targetAttribute: \"data-target\"\n}\n","import { Controller, ControllerConstructor } from \"./controller\"\nimport { Definition } from \"./definition\"\nimport { Dispatcher } from \"./dispatcher\"\nimport { ErrorHandler } from \"./error_handler\"\nimport { Logger } from \"./logger\"\nimport { Router } from \"./router\"\nimport { Schema, defaultSchema } from \"./schema\"\n\nexport class Application implements ErrorHandler {\n  readonly element: Element\n  readonly schema: Schema\n  readonly dispatcher: Dispatcher\n  readonly router: Router\n  logger: Logger = console\n\n  static start(element?: Element, schema?: Schema): Application {\n    const application = new Application(element, schema)\n    application.start()\n    return application\n  }\n\n  constructor(element: Element = document.documentElement, schema: Schema = defaultSchema) {\n    this.element = element\n    this.schema = schema\n    this.dispatcher = new Dispatcher(this)\n    this.router = new Router(this)\n  }\n\n  async start() {\n    await domReady()\n    this.dispatcher.start()\n    this.router.start()\n  }\n\n  stop() {\n    this.dispatcher.stop()\n    this.router.stop()\n  }\n\n  register(identifier: string, controllerConstructor: ControllerConstructor) {\n    this.load({ identifier, controllerConstructor })\n  }\n\n  load(...definitions: Definition[]): void\n  load(definitions: Definition[]): void\n  load(head: Definition | Definition[], ...rest: Definition[]) {\n    const definitions = Array.isArray(head) ? head : [head, ...rest]\n    definitions.forEach(definition => this.router.loadDefinition(definition))\n  }\n\n  unload(...identifiers: string[]): void\n  unload(identifiers: string[]): void\n  unload(head: string | string[], ...rest: string[]) {\n    const identifiers = Array.isArray(head) ? head : [head, ...rest]\n    identifiers.forEach(identifier => this.router.unloadIdentifier(identifier))\n  }\n\n  // Controllers\n\n  get controllers(): Controller[] {\n    return this.router.contexts.map(context => context.controller)\n  }\n\n  getControllerForElementAndIdentifier(element: Element, identifier: string): Controller | null {\n    const context = this.router.getContextForElementAndIdentifier(element, identifier)\n    return context ? context.controller : null\n  }\n\n  // Error handling\n\n  handleError(error: Error, message: string, detail: object) {\n    this.logger.error(`%s\\n\\n%o\\n\\n%o`, message, error, detail)\n  }\n}\n\nfunction domReady(): Promise<any> {\n  return new Promise(resolve => {\n    if (document.readyState == \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", resolve)\n    } else {\n      resolve()\n    }\n  })\n}\n","import { Constructor } from \"./constructor\"\nimport { Controller } from \"./controller\"\nimport { readInheritableStaticArrayValues } from \"./inheritable_statics\"\nimport { capitalize } from \"./string_helpers\"\n\n/** @hidden */\nexport function ClassPropertiesBlessing<T>(constructor: Constructor<T>) {\n  const classes = readInheritableStaticArrayValues(constructor, \"classes\")\n  return classes.reduce((properties, classDefinition) => {\n    return Object.assign(properties, propertiesForClassDefinition(classDefinition))\n  }, {} as PropertyDescriptorMap)\n}\n\nfunction propertiesForClassDefinition(key: string) {\n  const name = `${key}Class`\n\n  return {\n    [name]: {\n      get(this: Controller) {\n        const { classes } = this\n        if (classes.has(key)) {\n          return classes.get(key)\n        } else {\n          const attribute = classes.getAttributeName(key)\n          throw new Error(`Missing attribute \"${attribute}\"`)\n        }\n      }\n    },\n\n    [`has${capitalize(name)}`]: {\n      get(this: Controller) {\n        return this.classes.has(key)\n      }\n    }\n  }\n}\n","import { Constructor } from \"./constructor\"\nimport { Controller } from \"./controller\"\nimport { readInheritableStaticArrayValues } from \"./inheritable_statics\"\nimport { capitalize } from \"./string_helpers\"\n\n/** @hidden */\nexport function TargetPropertiesBlessing<T>(constructor: Constructor<T>) {\n  const targets = readInheritableStaticArrayValues(constructor, \"targets\")\n  return targets.reduce((properties, targetDefinition) => {\n    return Object.assign(properties, propertiesForTargetDefinition(targetDefinition))\n  }, {} as PropertyDescriptorMap)\n}\n\nfunction propertiesForTargetDefinition(name: string) {\n  return {\n    [`${name}Target`]: {\n      get(this: Controller) {\n        const target = this.targets.find(name)\n        if (target) {\n          return target\n        } else {\n          throw new Error(`Missing target element \"${this.identifier}.${name}\"`)\n        }\n      }\n    },\n\n    [`${name}Targets`]: {\n      get(this: Controller) {\n        return this.targets.findAll(name)\n      }\n    },\n\n    [`has${capitalize(name)}Target`]: {\n      get(this: Controller) {\n        return this.targets.has(name)\n      }\n    }\n  }\n}\n","import { Constructor } from \"./constructor\"\nimport { Controller } from \"./controller\"\nimport { readInheritableStaticObjectPairs } from \"./inheritable_statics\"\nimport { camelize, capitalize, dasherize } from \"./string_helpers\"\n\n/** @hidden */\nexport function ValuePropertiesBlessing<T>(constructor: Constructor<T>) {\n  const valueDefinitionPairs = readInheritableStaticObjectPairs<T, ValueTypeConstant>(constructor, \"values\")\n  const propertyDescriptorMap: PropertyDescriptorMap = {\n    valueDescriptorMap: {\n      get(this: Controller) {\n        return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {\n          const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair)\n          const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key)\n          return Object.assign(result, { [attributeName]: valueDescriptor })\n        }, {} as ValueDescriptorMap)\n      }\n    }\n  }\n\n  return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {\n    return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair))\n  }, propertyDescriptorMap)\n}\n\n/** @hidden */\nexport function propertiesForValueDefinitionPair<T>(valueDefinitionPair: ValueDefinitionPair): PropertyDescriptorMap {\n  const definition = parseValueDefinitionPair(valueDefinitionPair)\n  const { type, key, name } = definition\n  const read = readers[type], write = writers[type] || writers.default\n\n  return {\n    [name]: {\n      get(this: Controller) {\n        const value = this.data.get(key)\n        if (value !== null) {\n          return read(value)\n        } else {\n          return definition.defaultValue\n        }\n      },\n\n      set(this: Controller, value: T | undefined) {\n        if (value === undefined) {\n          this.data.delete(key)\n        } else {\n          this.data.set(key, write(value))\n        }\n      }\n    },\n\n    [`has${capitalize(name)}`]: {\n      get(this: Controller): boolean {\n        return this.data.has(key)\n      }\n    }\n  }\n}\n\nexport type ValueDescriptor = {\n  type: ValueType,\n  key: string,\n  name: string,\n  defaultValue: any\n}\n\nexport type ValueDescriptorMap = { [attributeName: string]: ValueDescriptor }\n\nexport type ValueDefinitionMap = { [token: string]: ValueTypeConstant }\n\nexport type ValueDefinitionPair = [string, ValueTypeConstant]\n\nexport type ValueTypeConstant = typeof Array | typeof Boolean | typeof Number | typeof Object | typeof String\n\nexport type ValueType = \"array\" | \"boolean\" | \"number\" | \"object\" | \"string\"\n\nfunction parseValueDefinitionPair([token, typeConstant]: ValueDefinitionPair): ValueDescriptor {\n  const type = parseValueTypeConstant(typeConstant)\n  return valueDescriptorForTokenAndType(token, type)\n}\n\nfunction parseValueTypeConstant(typeConstant: ValueTypeConstant) {\n  switch (typeConstant) {\n    case Array:   return \"array\"\n    case Boolean: return \"boolean\"\n    case Number:  return \"number\"\n    case Object:  return \"object\"\n    case String:  return \"string\"\n  }\n  throw new Error(`Unknown value type constant \"${typeConstant}\"`)\n}\n\nfunction valueDescriptorForTokenAndType(token: string, type: ValueType) {\n  const key = `${dasherize(token)}-value`\n  return {\n    type,\n    key,\n    name: camelize(key),\n    get defaultValue() { return defaultValuesByType[type] }\n  }\n}\n\nconst defaultValuesByType = {\n  get array() { return [] },\n  boolean: false,\n  number: 0,\n  get object() { return {} },\n  string: \"\"\n}\n\ntype Reader = (value: string) => any\n\nconst readers: { [type: string]: Reader } = {\n  array(value: string): any[] {\n    const array = JSON.parse(value)\n    if (!Array.isArray(array)) {\n      throw new TypeError(\"Expected array\")\n    }\n    return array\n  },\n\n  boolean(value: string): boolean {\n    return !(value == \"0\" || value == \"false\")\n  },\n\n  number(value: string): number {\n    return parseFloat(value)\n  },\n\n  object(value: string): object {\n    const object = JSON.parse(value)\n    if (object === null || typeof object != \"object\" || Array.isArray(object)) {\n      throw new TypeError(\"Expected object\")\n    }\n    return object\n  },\n\n  string(value: string): string {\n    return value\n  }\n}\n\ntype Writer = (value: any) => string\n\nconst writers: { [type: string]: Writer } = {\n  default: writeString,\n  array: writeJSON,\n  object: writeJSON\n}\n\nfunction writeJSON(value: any) {\n  return JSON.stringify(value)\n}\n\nfunction writeString(value: any) {\n  return `${value}`\n}\n","import { ClassPropertiesBlessing } from \"./class_properties\"\nimport { Constructor } from \"./constructor\"\nimport { Context } from \"./context\"\nimport { TargetPropertiesBlessing } from \"./target_properties\"\nimport { ValuePropertiesBlessing, ValueDefinitionMap } from \"./value_properties\"\n\nexport type ControllerConstructor = Constructor<Controller>\n\nexport class Controller {\n  static blessings = [ ClassPropertiesBlessing, TargetPropertiesBlessing, ValuePropertiesBlessing ]\n  static targets: string[] = []\n  static values: ValueDefinitionMap = {}\n\n  readonly context: Context\n\n  constructor(context: Context) {\n    this.context = context\n  }\n\n  get application() {\n    return this.context.application\n  }\n\n  get scope() {\n    return this.context.scope\n  }\n\n  get element() {\n    return this.scope.element\n  }\n\n  get identifier() {\n    return this.scope.identifier\n  }\n\n  get targets() {\n    return this.scope.targets\n  }\n\n  get classes() {\n    return this.scope.classes\n  }\n\n  get data() {\n    return this.scope.data\n  }\n\n  initialize() {\n    // Override in your subclass to set up initial controller state\n  }\n\n  connect() {\n    // Override in your subclass to respond when the controller is connected to the DOM\n  }\n\n  disconnect() {\n    // Override in your subclass to respond when the controller is disconnected from the DOM\n  }\n}\n","export * from \"@stimulus/core\"\n","import { Controller } from \"stimulus\"\r\n\r\nexport default class extends Controller {\r\n\r\n        connect() {\r\n            console.log(\"TEst\");\r\n        }\r\n\r\n}","import { Application } from \"stimulus\"\r\nimport HelloController from \"./controllers/hello_controller\"\r\n\r\nconst application = Application.start()\r\n\r\n// register controllers\r\napplication.register(\"hello\", HelloController)\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}